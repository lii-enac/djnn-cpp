/*
 *  djnn v2
 *
 *  The copyright holders for the contents of this file are:
 *      Ecole Nationale de l'Aviation Civile, France (2018)
 *  See file "license.terms" for the rights and conditions
 *  defined by copyright holders.
 *
 *
 *  Contributors:
 *      Mathieu Magnaudet <mathieu.magnaudet@enac.fr>
 *
 */

djnn lies on processes and couplings (see src/core/ontology/).
A djnn program is a tree of coupled processes.
Every node in the tree is a process.

A process has an activation state.
If a process has no parent it can be activated.
If a process has a parent and the parent is activated or activating then it can be activated.
If a process has a parent and the parent is deactivated or deactivating then it cannot be activated.
If a process is activated it can be deactivated.

Every process can be coupled to a list of subscribers.
Subscribers are notified each time a process is activated.

A property does not notify its subscribers if it is not activable that is, if it has a parent and its parent is not activated.
But its value can be set even if it is not activable.
If a property is activable, it notifies its subscribers each time its value is set.

A process "Component" can be in one of the following activation states:
	- deactivated,
	- activating,
	- activated
	- deactivating.
The activation of a process "Component" entails the activation of all of its children that are not qualified as models. While activating its children a "Component" is in the state activating.
The deactivation of a Component entails the deactivation of its children. During this operation it is in the state deactivating.

A process "Spike" is deactivated or activating. When activated by an external signal, that is a coupling or an explicit activation, it notifies its activation to all of its subscribers. Once this is done, it returns to the state deactivated.

A process "Assignment" is activated when its parent is activated except explicitly stated as activable only on demand through a coupling

A process "Connector" triggers a copy from its source property to the destination property each times the source property is updated. A first copy is made on activation. The copy is immediate.

A process "Binding" builds a coupling between two processes. Each time the source is activated the destination is activated. This activation is immediate.

To appear: A process "Watcher" waits for the incoming processes, when all of them had a chance to be activated the "Watcher" notifies all its subscribers. The "waiting" lasts only one execution cycle.
