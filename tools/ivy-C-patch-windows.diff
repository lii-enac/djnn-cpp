Index: src/Makefile.mingw
===================================================================
--- src/Makefile.mingw	(rÃ©vision 3694)
+++ src/Makefile.mingw	(copie de travail)
@@ -163,16 +163,16 @@
 	test -d $(PREFIX)/usr/X11R6/lib || mkdir -p $(PREFIX)/usr/X11R6/lib
 	test -d $(PREFIX)/usr/include || mkdir -p $(PREFIX)/usr/include
 	install -m644 libivy.a $(PREFIX)/usr/lib
-	install -m644 libgivy.a $(PREFIX)/usr/lib
-	install -m644 libxtivy.a $(PREFIX)/usr/X11R6/lib
-	install -m644 libtclivy.a $(PREFIX)/usr/lib
-	install -m644 libgtkivy.a $(PREFIX)/usr/X11R6/lib
+#	install -m644 libgivy.a $(PREFIX)/usr/lib
+#	install -m644 libxtivy.a $(PREFIX)/usr/X11R6/lib
+#	install -m644 libtclivy.a $(PREFIX)/usr/lib
+#	install -m644 libgtkivy.a $(PREFIX)/usr/X11R6/lib
 
 	install -m644 libivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/lib
-	install -m644 libgivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/lib
-	install -m644 libxtivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/X11R6/lib
-	install -m644 libtclivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/lib
-	install -m644 libgtkivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/X11R6/lib
+#	install -m644 libgivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/lib
+#	install -m644 libxtivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/X11R6/lib
+#	install -m644 libtclivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/lib
+#	install -m644 libgtkivy.so.$(MAJOR).$(MINOR) $(PREFIX)/usr/X11R6/lib
 
 	install -m644 *.h $(PREFIX)/usr/include
 
Index: src/ivy.c
===================================================================
--- src/ivy.c	(rÃ©vision 3694)
+++ src/ivy.c	(copie de travail)
@@ -24,12 +24,13 @@
 #endif
 
 #include <stdlib.h>
-#ifdef WIN32
+#if 1 //def WIN32
+#include <sys/time.h>
 #include <Ws2tcpip.h>
 #include <windows.h>
 #include "timer.h"
 #define snprintf _snprintf
-#ifdef __MINGW32__
+#if 0 //def __MINGW32__
 // should be removed in when defined in MinGW include of ws2tcpip.h
 extern const char * WSAAPI inet_ntop(int af, const void *src,
                              char *dst, socklen_t size);
@@ -69,6 +70,18 @@
 #define DEFAULT_DOMAIN 127.255.255.255
 #endif
 
+#ifndef timersub
+#define timersub(a, b, result)\
+	do {												\
+		(result)->tv_sec = (a)->tv_sec - (b)->tv_sec;	\
+		(result)->tv_usec = (a)->tv_usec - (b)->tv_usec;\
+	if ((result)->tv_usec < 0) {						\
+		--(result)->tv_sec;								\
+	  (result)->tv_usec += 1000000;						\
+	}													\
+	} while (0)
+#endif
+
 /* stringification et concatenation du domaine et du port en 2 temps :
  * Obligatoire puisque la substitution de domain, et de bus n'est pas
  * effectuée si on stringifie directement dans la macro GenerateIvyBus */
Index: src/timer.h
===================================================================
--- src/timer.h	(rÃ©vision 3694)
+++ src/timer.h	(copie de travail)
@@ -36,7 +36,7 @@
 
 
  //  implemetation of gettimeofday for windows
-#ifdef WIN32
+#if 0 //def WIN32
 #include "time.h"
 struct timezone 
 {
